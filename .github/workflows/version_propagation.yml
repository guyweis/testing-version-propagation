on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

name: Version Propagation

jobs:

  version_propagation:
    name: version propagation
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2.3.3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Current branch tag
        id: current_branch_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Propagation
        id: Propagation
        run: |
          echo "GIT VERSION PROPOGATION"
          tag=$(echo ${{ steps.current_branch_tag.outputs.tag }})
          echo $tag
          second_sub_tag=$(echo ${{ steps.current_branch_tag.outputs.tag }} | cut -c3-4)
          echo second sub tag is $second_sub_tag
          first_sub_tag=$(echo ${{ steps.current_branch_tag.outputs.tag }} | cut -c1-1)
          echo first sub tag is $first_sub_tag
          next_version_minor_num="$(($second_sub_tag + 1))"
          echo next version minor is $next_version_minor_num
          next_version_major_num="$(($first_sub_tag + 1))"
          echo next version major is $next_version_major_num
          git_remote=$(git config --get remote.origin.url) 
          echo $git_remote
          target_version_branch_minor=origin/release-$first_sub_tag.$next_version_minor_num
          echo target version branch minor is $target_version_branch_minor 
          target_version_branch_major=origin/release-$next_version_major_num.0
          echo target version branch major is $target_version_branch_major
          source_version=origin/release-$first_sub_tag.$second_sub_tag
          if git branch -r | grep $target_version_branch_minor ;  
          then
            echo Trying to update a minor branch
            git fetch
            git checkout $target_version_branch_minor
            echo "server/VERSION merge=ours" > .git/info/attributes
            git config merge.ours.driver true
            branch_name=merge/${{ steps.current_branch.outputs.tag }}_to_$target_version_branch_minor
            echo checking out to a new branch off of the target branch
            git checkout -b $branch_name
            echo merging ${{ steps.current_branch_tag.outputs.tag }} into $target_version_branch_minor
            current_commit=$(git rev-parse HEAD)
            git merge $source_version --no-edit
            git push --set-upstream  origin $branch_name
            after_merge_commit=$(git rev-parse HEAD)
            if ! "$current_commit" == "$after_merge_commit" ;
            then
              hub pull-request -b $target_version_branch_minor -m 'version propagation from $source_version'
            fi
          elif git branch -r | grep $target_version_branch_major ;
          then
            echo "Trying to update a major branch"
            git fetch
            git checkout $target_version_branch_major
            echo "server/VERSION merge=ours" > .git/info/attributes
            git config merge.ours.driver true
            branch_name="merge/${{ steps.current_branch.outputs.tag }}_to_$target_version_branch_major"
            echo checking out to a new branch off of the target branch
            git checkout -b $branch_name
            echo "merging ${{ steps.current_branch.outputs.tag }} into $target_version_branch_major"
            current_commit=$(git rev-parse HEAD)
            git merge $source_version --no-edit
            git push --set-upstream  origin $branch_name
            after_merge_commit=$(git rev-parse HEAD)
            if ! "$current_commit" == "$after_merge_commit" ;
            then
              hub pull-request -b $target_version_branch_major -m 'version propagation from $source_version'
            fi
          else
            echo Trying to update the develop branch
            git checkout origin/develop
            echo "server/VERSION merge=ours" > .git/info/attributes
            git config merge.ours.driver true
            branch_name=merge/$tag_to_origin/develop
            echo checking out to a new branch off of the target branch
            git checkout -b $branch_name
            echo merging $tag into origin/develop
            current_commit=$(git rev-parse HEAD)
            git merge $source_version --no-edit
            git push --set-upstream  origin $branch_name
            after_merge_commit=$(git rev-parse HEAD)
            if ! "$current_commit" == "$after_merge_commit" ;
            then
              hub pull-request -b develop -m 'version propagation from $source_version'
            fi
          fi
